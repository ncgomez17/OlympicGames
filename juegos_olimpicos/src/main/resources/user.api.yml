user:
  post:
    tags:
      - authenticate user
    summary: Authenticate user
    description: Authenticate user
    operationId: authenticate
    requestBody:
      description: Authenticate user
      content:
        application/json:
          schema:
            $ref: 'user.model.yml#/components/schemas/UserDto'
      required: true
    responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              $ref: 'user.model.yml#/components/schemas/SessionDto'
      400:
        description: Invalid ID supplied
        content: { }
      405:
        description: Validation exception
        content: { }
    x-codegen-request-body-name: body

register:
  post:
    tags:
      - register user
    summary: Register user
    description: Register user
    operationId: register
    requestBody:
      description: Register user
      content:
        application/json:
          schema:
            $ref: 'user.model.yml#/components/schemas/UserDto'
      required: true
    responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              $ref: 'user.model.yml#/components/schemas/SessionDto'
      400:
        description: Invalid ID supplied
        content: { }
      405:
        description: Validation exception
        content: { }
    x-codegen-request-body-name: body
updatePassword:
  put:
    tags:
      - update user
    summary: Update user
    description: Update user
    operationId: updatePassword
    requestBody:
      content:
        application/json:
          schema:
            type: string

    responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              $ref: 'user.model.yml#/components/schemas/UserDto'
      400:
        description: Invalid ID supplied
        content: { }
      405:
        description: Validation exception
        content: { }
    x-codegen-request-body-name: body
user-isAdmin:
  get:
    tags:
      - user
    summary: Get true if is admin else false
    operationId: getIsAdmin
    responses:
      200:
        description: successful operation
        content:
          application/json:
            schema:
              type: boolean
              default: false
      404:
        description: Admin not found
        content: { }




